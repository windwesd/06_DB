/* SELECT (조회)
 * 
 * - 지정된 테이블에서 원하는 데이터가 존재하는 행을 선택해서 조회하는 SQL(구조적 질의 언어)
 * 
 * - 작성된 구문에 맞는, 행 열 데이터가 조회됨
 * 		-> 조회 결과 행의 집합 == RESULT SET (중요!)
 * 
 * - 조회 결과는 0행 이상 (조건에 맞는 행이 없을 수 있다!)
 * */

/* [SELECT 작성법 - 1]
 * 
 * 2) SELECT 컬럼명, 컬럼명, ....
 * 1) FROM 테이블명;
 * 
 * - 지정된 테이블의 모든 행에서 특정 컬럼만 조회하기
 */


-- EMPLOYEE 테이블에서
-- 모든 행의 이름(EMP_NAME), 급여(SALARY) 컬럼 조회

SELECT EMP_NAME, SALARY
FROM EMPLOYEE;


-- EMPLOYEE 테이블에서
-- 모든 행의 사번, 이름, 급여, 입사일 조회

SELECT EMP_ID, EMP_NAME, SALARY, HIRE_DATE
FROM EMPLOYEE;


-- EMPLOYEE 테이블에 존재하는 모든 행, 모든 컬럼 조회
-- * (asterisk) : "모든", 포함을 나타내는 기호
SELECT * FROM EMPLOYEE;


-- DEPARTMENT 테이블에서 부서코드, 부서명 조회
SELECT DEPT_ID , DEPT_TITLE 
FROM DEPARTMENT;

------------------------------------------------------------------------

/* 컬럼 값 산술 연산 */

/* - SELECT문 작성 시 컬럼명에 산술 연산을 작성하면
 * 	 조회 결과(RESULT SET)에서 모든 연산에 산술 연산이 적용된 결과 값이 조회된다!!
 */ 
 
-- EMPLOYEE 테이블에서 모든 사원의 이름, 급여, 급여 + 100 만 조회

SELECT EMP_NAME, SALARY, SALARY + 1000000
FROM EMPLOYEE;

-- EMPLOYEE 테이블에서 모든 사원의 이름, 급여, 연봉(급여 * 12) 조회
SELECT EMP_NAME, SALARY, SALARY * 12
FROM EMPLOYEE;

------------------------------------------------------------------------

/* SYSDATE / CURRENT_DATE, SYSTIMESTAMP / CURRENT_TIMESTAMP */

/* - DB는 날짜/시간 관련 데이터를 다루기 굉장히 편하다!!!
 * 
 * - SYSDATE : 시스템이 나타내고 있는 현재 시간
 * - CURRENT_DATE : 현재 세션(사용자 기반) 시간
 * 
 * - SYSTIMESTAMP : 시스템이 나타내고 있는 시간 ms 단위 + 지역 포함 
 * - CURRENT_TIMESTAMP : 현재 세션(사용자 기반) 시간 ms 단위 + 지역 포함 
 */
 

SELECT SYSDATE, CURRENT_DATE, SYSTIMESTAMP, CURRENT_TIMESTAMP 
FROM DUAL;

/* DUAL (DUmmy tAbLe)
 * - 가짜 테이블 (임시 테이블)
 * - 조회하려는 데이터가 실제 테이블에 존재하는 데이터가 아닌 경우에 사용
 */

/* 날짜 데이터 연산하기 ( +, - 만 가능!!!) */

-- 날짜 + 1 == 1일 증가
-- 날짜 - 1 == 1일 감소
--> 정수 연산은 일 단위로 연산된다!!

-- 현재 시간, 어제 내일, 모레 조회

SELECT CURRENT_DATE , CURRENT_DATE - 1, CURRENT_DATE  + 1, CURRENT_DATE + 2
FROM DUAL;

/* 알아두면 도움됨!!! */
-- 현재 시간, 한시간 후, 1분 후, 1초 후 조회
SELECT 
	CURRENT_DATE, 
	CURRENT_DATE + 1/24, 
	CURRENT_DATE + 1/24/60, 
	CURRENT_DATE + 1/24/60/60
FROM DUAL;


/* 날짜 끼리 연산하기 ( - 만 가능!! ) */
--> 연산 결과는 일 단위 ( 1 == 1일 )

-- TO_DATE('날짜', '패턴');
--	-> '날짜문자열'을 '패턴' 형식으로 해석하여 DATE 타입으로 변환하는 함수

SELECT '2024-08-15', TO_DATE('2024-08-15', 'YYYY-MM-DD') 
FROM DUAL;

-- 2024년 12월 6일 - 2024년 8월 14일 == 종강까지 남은 일자
SELECT TO_DATE('2024-12-06', 'YYYY-MM-DD') 
			- TO_DATE('2024-08-14', 'YYYY-MM-DD') 
FROM DUAL;

-- 점심 시간 - 현재 시간 == 점심까지 남은 시간
SELECT (TO_DATE('2024-08-14 12:50', 'YYYY-MM-DD HH24,MI') 
			- CURRENT_DATE) * 24 * 60 * 60 
FROM DUAL;









